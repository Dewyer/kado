{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": ""
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/api-token": {
      "get": {
        "description": "Get active token for logged in user",
        "operationId": "api-token",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/GetApiTokenResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/check-user": {
      "post": {
        "description": "Check if a user is already registered by a token",
        "operationId": "authcheck-user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/CheckUserResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "description": "Login an existing user",
        "operationId": "authlogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/AuthorizingResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "description": "Refresh user session with refresh token",
        "operationId": "authrefresh",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/AuthorizingResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "description": "Register a new user",
        "operationId": "authregister",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/AuthorizingResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "description": "Healthcheck",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        }
      }
    },
    "/problems": {
      "get": {
        "description": "Get all available problems",
        "operationId": "problems",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/GetProblemsResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/problems/{code_name}": {
      "get": {
        "description": "Get full problem details",
        "operationId": "problems{code_name}",
        "parameters": [
          {
            "name": "code_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/GetProblemDetailsResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/refresh-api-token": {
      "post": {
        "description": "Refresh api token for logged in user",
        "operationId": "refresh-api-token",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/GetApiTokenResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/submissions/start-submission": {
      "post": {
        "description": "Start a new submission",
        "operationId": "submissionsstart-submission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartSubmissionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/StartSubmissionResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/submissions/test": {
      "put": {
        "description": "Get input for a new test",
        "operationId": "submissionstest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTestInputRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/GetTestInputResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/submissions/test/{test_id}": {
      "post": {
        "description": "Send output for an existing test",
        "operationId": "submissionstest{test_id}",
        "parameters": [
          {
            "name": "test_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestOutputRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SendTestOutputResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/team": {
      "get": {
        "description": "Get the team of the logged in user",
        "operationId": "team",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/GetUsersTeamResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/team/create": {
      "post": {
        "description": "Create a new team",
        "operationId": "teamcreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/CreateTeamResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/team/join": {
      "post": {
        "description": "Join a team",
        "operationId": "teamjoin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinTeamRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "null"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/team/leave": {
      "post": {
        "description": "Leave team user is in",
        "operationId": "teamleave",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaveTeamRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "null"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiTokenDto": {
        "type": "object",
        "required": [
          "id",
          "is_deleted",
          "owner_id",
          "token"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "is_deleted": {
            "type": "boolean"
          },
          "owner_id": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "AuthorizingResponse": {
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "user"
        ],
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          }
        }
      },
      "CheckUserRequest": {
        "type": "object",
        "required": [
          "authorizer",
          "token"
        ],
        "properties": {
          "authorizer": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "CheckUserResponse": {
        "type": "object",
        "required": [
          "user_exists",
          "user_inactive"
        ],
        "properties": {
          "user_exists": {
            "type": "boolean"
          },
          "user_inactive": {
            "type": "boolean"
          }
        }
      },
      "CreateTeamRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CreateTeamResponse": {
        "type": "object",
        "required": [
          "team"
        ],
        "properties": {
          "team": {
            "$ref": "#/components/schemas/TeamFullyPopulatedDto"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "GetApiTokenResponse": {
        "type": "object",
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "$ref": "#/components/schemas/ApiTokenDto"
          }
        }
      },
      "GetProblemDetailsResponse": {
        "type": "object",
        "required": [
          "problem",
          "submissions"
        ],
        "properties": {
          "problem": {
            "$ref": "#/components/schemas/ProblemFullyPopulatedDto"
          },
          "submissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmissionDto"
            }
          }
        }
      },
      "GetProblemsResponse": {
        "type": "object",
        "required": [
          "problems"
        ],
        "properties": {
          "next_problem_available_at": {
            "type": "string",
            "nullable": true
          },
          "problems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDto"
            }
          }
        }
      },
      "GetTestInputRequest": {
        "type": "object",
        "required": [
          "problem"
        ],
        "properties": {
          "problem": {
            "type": "string"
          }
        }
      },
      "GetTestInputResponse": {
        "type": "object",
        "required": [
          "deadline",
          "input",
          "test_id"
        ],
        "properties": {
          "deadline": {
            "type": "integer",
            "format": "int64"
          },
          "input": {},
          "test_id": {
            "type": "string"
          }
        }
      },
      "GetUsersTeamResponse": {
        "type": "object",
        "properties": {
          "team": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TeamFullyPopulatedDto"
              }
            ],
            "nullable": true
          }
        }
      },
      "JoinTeamRequest": {
        "type": "object",
        "required": [
          "join_code"
        ],
        "properties": {
          "join_code": {
            "type": "string"
          }
        }
      },
      "LeaveTeamRequest": {
        "type": "object",
        "properties": {
          "inheritor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "authorizer",
          "token"
        ],
        "properties": {
          "authorizer": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "ProblemDto": {
        "type": "object",
        "required": [
          "base_point_value",
          "code_name",
          "difficulty",
          "id",
          "is_deleted",
          "max_submissions",
          "name",
          "problem_statement_id",
          "sample_count"
        ],
        "properties": {
          "available_from": {
            "type": "string",
            "nullable": true
          },
          "available_until": {
            "type": "string",
            "nullable": true
          },
          "base_point_value": {
            "type": "integer",
            "format": "int64"
          },
          "code_name": {
            "type": "string"
          },
          "difficulty": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string"
          },
          "is_deleted": {
            "type": "boolean"
          },
          "max_submissions": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "problem_statement_id": {
            "type": "string"
          },
          "sample_count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProblemFullyPopulatedDto": {
        "type": "object",
        "required": [
          "base_point_value",
          "code_name",
          "difficulty",
          "id",
          "is_deleted",
          "max_submissions",
          "name",
          "problem_statement",
          "sample_count"
        ],
        "properties": {
          "available_from": {
            "type": "string",
            "nullable": true
          },
          "available_until": {
            "type": "string",
            "nullable": true
          },
          "base_point_value": {
            "type": "integer",
            "format": "int64"
          },
          "code_name": {
            "type": "string"
          },
          "difficulty": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string"
          },
          "is_deleted": {
            "type": "boolean"
          },
          "max_submissions": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "problem_statement": {
            "$ref": "#/components/schemas/ProblemStatementDto"
          },
          "sample_count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProblemStatementDto": {
        "type": "object",
        "required": [
          "id",
          "problem_statement"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "problem_statement": {
            "type": "string"
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": [
          "authorizer",
          "participate_in_leaderboards",
          "token",
          "username"
        ],
        "properties": {
          "authorizer": {
            "type": "string"
          },
          "participate_in_leaderboards": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "SendTestOutputRequest": {
        "type": "object",
        "required": [
          "output"
        ],
        "properties": {
          "output": {}
        }
      },
      "SendTestOutputResponse": {
        "type": "object",
        "required": [
          "correct"
        ],
        "properties": {
          "correct": {
            "type": "boolean"
          }
        }
      },
      "StartSubmissionRequest": {
        "type": "object",
        "required": [
          "problem"
        ],
        "properties": {
          "problem": {
            "type": "string"
          },
          "sample_index": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "StartSubmissionResponse": {
        "type": "object",
        "required": [
          "submission"
        ],
        "properties": {
          "submission": {
            "$ref": "#/components/schemas/SubmissionDto"
          }
        }
      },
      "SubmissionDto": {
        "type": "object",
        "required": [
          "id",
          "owner_id",
          "problem_id",
          "started_at",
          "test_count"
        ],
        "properties": {
          "correct": {
            "type": "boolean",
            "nullable": true
          },
          "finished_at": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "owner_id": {
            "type": "string"
          },
          "problem_id": {
            "type": "string"
          },
          "sample_index": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "started_at": {
            "type": "integer",
            "format": "int64"
          },
          "test_count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TeamFullyPopulatedDto": {
        "type": "object",
        "required": [
          "id",
          "members",
          "name",
          "points"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "join_code": {
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "name": {
            "type": "string"
          },
          "owner_user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDto"
              }
            ],
            "nullable": true
          },
          "points": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserDto": {
        "type": "object",
        "required": [
          "email",
          "id",
          "individual_points",
          "is_admin",
          "participate_in_leaderboards",
          "username"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "individual_points": {
            "type": "integer",
            "format": "int64"
          },
          "is_admin": {
            "type": "boolean"
          },
          "participate_in_leaderboards": {
            "type": "boolean"
          },
          "team_id": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string"
          }
        }
      }
    }
  }
}